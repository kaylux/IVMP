/*********************************************************************************                 Copyright © 2011 - Valhalla Gaming                            **                                 Faction Script                                **                      Original Authors: 	Broski - James                      **                             Created: 	19/03/11                                **                       Title:		Valhalla Gaming : IV                        **                              Version:	0.0.5e	                                **                                                                               **____________________________________Change Log_________________________________**                   James - Created                                             ***********************************************************************************________________________Static Factions________________________________________**                                                                               **                    F ID 1: LCPD                                               **                    F ID 2: FBI                                                **                    F ID 3: Government                                         **                                                                               **______________________________Misc.____________________________________________*********************************************************************************/function onScriptInit(){	log("***************************************************");	log("*     Valhalla Script | Factions  Loaded          *");	log("***************************************************");}addEvent("scriptInit", onScriptInit);function onScriptExit( ){	log("***************************************************");	log("*  Valhalla Script | Factions Un-Loaded           *");	log("***************************************************");}addEvent("scriptExit", onScriptExit);local fData = { }; // Dynamic Factions Tablelocal FactionCount = 0;local faction = {	function load(fData)	{		local factions = sql.query_assoc("SELECT * FROM factions")		if( factions )		{			foreach( faction in factions )			{								local ID = faction.id;				fData[ID] <- { };				fData[ID].ID <- faction.id;				fData[ID].Name <-faction.Name;								fData[ID].Rank1 <- faction.Rank1;				fData[ID].Rank2 <- faction.Rank2;				fData[ID].Rank3 <- faction.Rank3;				fData[ID].Rank4 <- faction.Rank4;				fData[ID].Rank5 <- faction.Rank5;				fData[ID].Rank6 <- faction.Rank6;				fData[ID].Rank7 <- faction.Rank7;				fData[ID].Rank8 <- faction.Rank8;								fData[ID].PickupX <- faction.PickupX;				fData[ID].PickupY <- faction.PickupY;				fData[ID].PickupZ <- faction.PickupZ;				fData[ID].IntX <- faction.IntX;				fData[ID].IntY <- faction.IntY;				fData[ID].IntZ <- faction.IntZ;				fData[ID].SpawnX <- faction.SpawnX;				fData[ID].SpawnY <- faction.SpawnY;				fData[ID].SpawnZ <- faction.SpawnZ;				fData[ID].Value <- faction.Value;				fData[ID].Bank <- faction.Bank;				fData[ID].Locked <- faction.Locked;				FactionCount++;				log("[Faction Loaded]: " +  fData[ID].ID + ": "  + fData[ID].Name);			}		}	}	function create(name)	{		if(sql.query("INSERT INTO factions (Name) VALUES ('"+name+"')"))		{			log("[Faction Created]: " +  name);		}	}	function save(id, pt)    {		local update = sql.query_affected_rows("UPDATE factions SET Name='" + pt.Name + "', Rank1='" + pt.Rank1 + "', Rank2='" + pt.Rank2 + "', Rank3='" + pt.Rank3 + "', Rank4='" + pt.Rank4 + "', Rank5='" + pt.Rank5 + "', Rank6='" + pt.Rank6 + "', Rank7='" + pt.Rank7 + "', Rank8='" + pt.Rank8 + "',PickupX='"+pt.PickupX +"', PickupY='"+pt.PickupY +"', PickupZ='" + pt.PickupZ +"' , IntX='"+pt.IntX+"' , IntY='"+pt.IntY+"', IntZ='"+pt.IntZ+"' , SpawnX='"+pt.SpawnX+"' , SpawnY='"+pt.SpawnY+"' , SpawnZ='"+pt.SpawnZ+"' , Value='"+pt.Value+"' , Bank='"+pt.Bank+"' , Locked='"+pt.Locked+"' WHERE name='" + sql.escape(name) + "'" )		if(update)		{				log(pt.Name + "|Faction Saved Successfully!");			return 1;		}		else		{			log( pt.Name + " |Error Saving Faction!");			return 0;		}    }}function onPlayerCommand(playerid, command){	local cmd = split(command, " ");	local str;	if(pData[playerid].faction == 1)	{		if(cmd[0] == "/fhelp" || cmd[0] == "/fh")		{			sendPlayerMessage(playerid, "__________________Faction Commands__________________", COLOR_WHITE);			sendPlayerMessage(playerid, " /f ", COLOR_YELLOW);			sendPlayerMessage(playerid, " ---  ", COLOR_YELLOW);					}		if(cmd[0] == "/f" || cmd[0] == "/faction")		{			local fac = pData[playerid].faction;			local str = cmd[1];			for( local i = 0; i < getPlayerSlots(); i++ )			{				if(pData[i].faction == fac)				{					sendPlayerMessage(i, "[FCHAT]" + getPlayerName(playerid) + ": " + str, COLOR_TEAL);				}			}		}			}	if(pData[playerid].leader == 1)	{		if(cmd[0] == "/flhelp" || cmd[0] == "/ah")		{			sendPlayerMessage(playerid, "__________________Faction Leader Commands__________________", COLOR_WHITE);			sendPlayerMessage(playerid, " --- ", COLOR_YELLOW);			sendPlayerMessage(playerid, " ---  ", COLOR_YELLOW);			sendPlayerMessage(playerid, "[ Leader help ] /f(action)edit /finvite /crank", COLOR_BLUE);		}		if(cmd[0] == "/finvite")		{			local fac = pData[playerid].faction;			if(returnUser(cmd[1]))			{				local target = returnUser(cmd[1]);				if(pData[target].faction == 0)				{					pData[target].faction = fac;					sendPlayerMessage(target, "You Have Been Invited Into Faction: " + fData[fac].name, COLOR_YELLOW);				}				else				{					sendPlayerMessage(playerid, "[vG] Player Is Already In A Faction!", COLOR_YELLOW);				}			}			else			{				sendPlayerMessage(playerid, "SYNTAX: /invite [ Player ID/Name ]", COLOR_GREY);			}			}		}		if(cmd[0] == "/crank")		{			local fac = pData[playerid].faction;			local target = returnUser(cmd[1]);			local rank = cmd[2].tointeger;			if(pData[target].faction == fac)			{				if(returnUser(cmd[1]))				{					if(isNumeric(rank))					{						if(rank >= 0 && rank <= 8) 						{							if(rank == 0)							{								pData[target].rank = 0;								pData[target].faction = 0;								sendPlayerMessage(target, "You Have Removed: " + getPlayerName(target) + " From The Faction." , COLOR_YELLOW);							}							else							{								pData[target].rank = rank;								sendPlayerMessage(target, "You Have Changed: " + getPlayerName(target) + "'s Rank To: " + fData[fac].Rank+rank , COLOR_YELLOW);							}						}						else						{							sendPlayerMessage(playerid, "[vG] The Rank Must Be Below 8 But Higher Than 0", COLOR_YELLOW);						}								}					else					{							sendPlayerMessage(playerid, "SYNTAX: /crank [ Player ID/Name ] [ Rank ] || To remove someone, Set the rank to 0", COLOR_GREY);					}				}				else				{						sendPlayerMessage(playerid, "Invlaid Player Name/ID", COLOR_GREY);				}					}			else			{				sendPlayerMessage(playerid, "[vG] That Player Insent In Your Faction!", COLOR_YELLOW);			}		}					if(cmd[0] == "/fedit" || cmd[0] == "/factionedit")		{ 			if(pData[playerid].faction > 1)			{				local fac = pData[playerid].faction;				if(command.len() > cmd[0].len()+1)				{					if(cmd[1] == "name")					{						fData[fac].Name  = cmd[2].tostring();						sendPlayerMessage(playerid, "Name Set!", COLOR_YELLOW);						adminMessage("[ADMIN]: " + getPlayerName(playerid) + " - Faction:" + fac + " - Stat:" + cmd[2].tostring + "- Value:" + cmd[3].tostring, COLOR_GREEN);						log("[ADMIN]: " + getPlayerName(playerid) + " - Faction:" + fac + " - Stat:" + cmd[1].tostring + "- Value:" + cmd[2].tostring);						return 1;					}								if(cmd[1] == "rank1")							{						fData[fac].Rank1  = cmd[3].tostring();						sendPlayerMessage(playerid, "Rank One Set!", COLOR_YELLOW);						log("[LEADER]: " + getPlayerName(playerid) + " - Faction:" + fac + " - Stat:" + cmd[1].tostring + "- Value:" + cmd[3].tostring);						return 1;					}					if(cmd[1] == "rank2")					{						fData[fac].Rank2  = cmd[3].tostring();						log("[LEADER]: " + getPlayerName(playerid) + " - Faction:" + fac + " - Stat:" + cmd[1].tostring + "- Value:" + cmd[2].tostring);						return 1;					}						if(cmd[1] == "rank3")					{						fData[fac].Rank3  = cmd[3].tostring();						sendPlayerMessage(playerid, "Rank Three Set!", COLOR_YELLOW);						log("[LEADER]: " + getPlayerName(playerid) + " - Faction:" + fac + " - Stat:" + cmd[1].tostring + "- Value:" + cmd[2].tostring);						return 1;					}						if(cmd[1] == "rank4")					{						fData[fac].Rank4  = cmd[3].tostring();						sendPlayerMessage(playerid, "Rank Four Set!", COLOR_YELLOW);						log("[LEADER]: " + getPlayerName(playerid) + " - Faction:" + fac + " - Stat:" + cmd[1].tostring + "- Value:" + cmd[2].tostring);						return 1;					}						if(cmd[1] == "rank5")					{						fData[fac].Rank5  = cmd[3].tostring();						sendPlayerMessage(playerid, "Rank Five Set!", COLOR_YELLOW);						log("[LEADER]: " + getPlayerName(playerid) + " - Faction:" + fac + " - Stat:" + cmd[1].tostring + "- Value:" + cmd[2].tostring);						return 1;					}						if(cmd[1] == "rank6")					{						fData[fac].Rank6  = cmd[3].tostring();						sendPlayerMessage(playerid, "Rank Six Set!", COLOR_YELLOW);						log("[LEADER]: " + getPlayerName(playerid) + " - Faction:" + fac + " - Stat:" + cmd[1].tostring + "- Value:" + cmd[2].tostring);							return 1;					}						if(cmd[1] == "rank7")					{						fData[fac].Rank7  = cmd[3].tostring();						sendPlayerMessage(playerid, "Rank Seven Set!", COLOR_YELLOW);						log("[LEADER]: " + getPlayerName(playerid) + " - Faction:" + fac + " - Stat:" + cmd[1].tostring + "- Value:" + cmd[2].tostring);						return 1;					}						if(cmd[1] == "rank8")					{						fData[fac].Rank8  = cmd[3].tostring();						sendPlayerMessage(playerid, "Rank Eight Set!", COLOR_YELLOW);						log("[LEADER]: " + getPlayerName(playerid) + " - Faction:" + fac + " - Stat:" + cmd[1].tostring + "- Value:" + cmd[2].tostring);						return 1;					}						if(cmd[1] == "outside")					{						local pos = getPlayerCoordinates(playerid)						fData[fac].PickupX  = pos[0];						fData[fac].PickupY  = pos[1];						fData[fac].PickupZ  = pos[2];						sendPlayerMessage(playerid, "Outside Pos Set!", COLOR_YELLOW);						log("[LEADER]: " + getPlayerName(playerid) + " - Faction:" + fac + " - Stat:" + cmd[1].tostring + "- Value:" + cmd[2].tostring);						return 1;					}						if(cmd[1] == "int")					{						local pos = getPlayerCoordinates(playerid)						fData[fac].IntX  = pos[0];						fData[fac].IntY  = pos[1];						fData[fac].IntZ  = pos[2];						sendPlayerMessage(playerid, "Inside Pos Set!", COLOR_YELLOW);						log("[LEADER]: " + getPlayerName(playerid) + " - Faction:" + fac + " - Stat:" + cmd[1].tostring + "- Value:" + cmd[2].tostring);						return 1;					}						if(cmd[1] == "spawn")					{						local pos = getPlayerCoordinates(playerid)						fData[fac].SpawnX  = pos[0];						fData[fac].SpawnY  = pos[1];						fData[fac].SpawnZ  = pos[2];						sendPlayerMessage(playerid, "Spawn Pos Set!", COLOR_YELLOW);						log("[LEADER]: " + getPlayerName(playerid) + " - Faction:" + fac + " - Stat:" + cmd[1].tostring + "- Value:" + cmd[2].tostring);						return 1;					}								}				else				{					sendPlayerMessage(playerid, "SYNTAX: /fedit [ Option ] [ Value ]", COLOR_YELLOW);					sendPlayerMessage(playerid, "OPTIONS: name rank1-8 outside int spawn  ", COLOR_YELLOW);				}			}		}		}}addEvent("playerCommand", onPlayerCommand);